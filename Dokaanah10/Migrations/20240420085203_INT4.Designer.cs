// <auto-generated />
using System;
using Dokaanah10.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dokaanah10.Migrations
{
    [DbContext(typeof(DokkanahContex10))]
    [Migration("20240420085203_INT4")]
    partial class INT4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dokaanah10.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Dokaanah10.Models.Cart_Product", b =>
                {
                    b.Property<int>("Prid")
                        .HasColumnType("int");

                    b.Property<int>("Caid")
                        .HasColumnType("int");

                    b.HasKey("Prid", "Caid");

                    b.HasIndex("Caid");

                    b.ToTable("Cart_Products");
                });

            modelBuilder.Entity("Dokaanah10.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Dokaanah10.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orderid")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Orderid");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Dokaanah10.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Dokaanah10.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("Customerid")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Customerid");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Dokaanah10.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orderid")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Sellerid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Orderid");

                    b.HasIndex("Sellerid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Dokaanah10.Models.Product_Category", b =>
                {
                    b.Property<int>("Pid")
                        .HasColumnType("int");

                    b.Property<int>("Cid")
                        .HasColumnType("int");

                    b.HasKey("Pid", "Cid");

                    b.HasIndex("Cid");

                    b.ToTable("Product_Categories");
                });

            modelBuilder.Entity("Dokaanah10.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Customerid")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Customerid");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Dokaanah10.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Dokaanah10.Models.Cart_Product", b =>
                {
                    b.HasOne("Dokaanah10.Models.Cart", "Ca")
                        .WithMany("Cart_Products")
                        .HasForeignKey("Caid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dokaanah10.Models.Product", "Pr")
                        .WithMany("Cart_Products")
                        .HasForeignKey("Prid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ca");

                    b.Navigation("Pr");
                });

            modelBuilder.Entity("Dokaanah10.Models.Customer", b =>
                {
                    b.HasOne("Dokaanah10.Models.Order", "Order")
                        .WithMany("Customers")
                        .HasForeignKey("Orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Dokaanah10.Models.Payment", b =>
                {
                    b.HasOne("Dokaanah10.Models.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("Customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Dokaanah10.Models.Product", b =>
                {
                    b.HasOne("Dokaanah10.Models.Order", "Order")
                        .WithMany("GetProducts")
                        .HasForeignKey("Orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dokaanah10.Models.Seller", "Seller")
                        .WithMany("GetProducts")
                        .HasForeignKey("Sellerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Dokaanah10.Models.Product_Category", b =>
                {
                    b.HasOne("Dokaanah10.Models.Category", "C")
                        .WithMany("Product_Categories")
                        .HasForeignKey("Cid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dokaanah10.Models.Product", "P")
                        .WithMany("Product_Categories")
                        .HasForeignKey("Pid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("C");

                    b.Navigation("P");
                });

            modelBuilder.Entity("Dokaanah10.Models.Review", b =>
                {
                    b.HasOne("Dokaanah10.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("Customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Dokaanah10.Models.Cart", b =>
                {
                    b.Navigation("Cart_Products");
                });

            modelBuilder.Entity("Dokaanah10.Models.Category", b =>
                {
                    b.Navigation("Product_Categories");
                });

            modelBuilder.Entity("Dokaanah10.Models.Customer", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Dokaanah10.Models.Order", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("GetProducts");
                });

            modelBuilder.Entity("Dokaanah10.Models.Product", b =>
                {
                    b.Navigation("Cart_Products");

                    b.Navigation("Product_Categories");
                });

            modelBuilder.Entity("Dokaanah10.Models.Seller", b =>
                {
                    b.Navigation("GetProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
